{
    "solidityVersion": "0.8.0",
    "contractType": "ERC-20",
    "stateVariables": [
        {
            "visibility": "public",
            "declaration": "address bridgeBAddress"
        }
    ],
    "functions": [
        "setBridgeAddress",
        "mint"
    ],
    "events": [],
    "modifiers": [],
    "imports": [
        "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "@openzeppelin/contracts/access/Ownable.sol"
    ],
    "tokenHandling": [
        "mint"
    ],
    "contractInteractions": [],
    "hardcodedAddresses": [],
    "contractCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenB is ERC20, Ownable {\r\n    address public bridgeBAddress;\r\n\r\n    constructor() ERC20(\"TokenB\", \"TKB\") {}\r\n\r\n    function setBridgeAddress(address _bridgeBAddress) external onlyOwner {\r\n        bridgeBAddress = _bridgeBAddress;\r\n    }\r\n\r\n    function mint(address to, uint256 amount) external {\r\n        require(msg.sender == bridgeBAddress, \"Only the bridge contract can mint tokens\");\r\n        _mint(to, amount);\r\n    }\r\n    \r\n}\r\n"
}